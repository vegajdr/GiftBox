swagger: '2.0'
info:
  title: GiftBox
  description: API powering Gentoo, the gift matching application
  version: "1.0.0"
# the domain of the service
host: giftbox-tiy.herokuapp.com
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /:username
consumes:
  - application/x-www-form-urlencoded
  - application/json
produces:
  - application/json

paths:


  /users:
    get:
      summary: Obtain a list of registered Gentoo users
      description: |
        Returns an array of users information
      parameters:
        - name: username
          in: path
          description: unique email address
          required: true
          type: string
          format: double
      tags:
        - Users
      responses:
        200:
          description: An array of user objects
          schema:
            type: array
            items:
              $ref: '#/definitions/UsersGet'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'

    # patch:
    #   summary: The API can update users
    #   description: |
    #     Users can update profiles and add favorites.
    #   parameters:
    #     - name: email_address
    #       in: query
    #       description: unique email address
    #       required: true
    #       type: string
    #       format: double
    #     - name: password
    #       in: query
    #       description: encrypted password
    #       required: true
    #       type: string
    #       format: double
    #     - name: token
    #       in: query
    #       description: token assigned by FareFairy
    #       required: true
    #       type: string
    #       format: double
    #   tags:
    #     - Users
    #   responses:
    #     200:
    #       description: An array of user objects.
    #       schema:
    #         type: array
    #         items:
    #           $ref: '#/definitions/UsersPatch'
    #     400:
    #       description: Bad Request
    #       schema:
    #         type: integer
    #         items:
    #           $ref: '#/definitions/Error'
    #     404:
    #       description: Not Found
    #       schema:
    #         type: integer
    #         items:
    #           $ref: '#/definitions/Error'
    #     500:
    #       description: Internal Server Error
    #       schema:
    #         type: integer
    #         items:
    #           $ref: '#/definitions/Error'
    #     default:
    #       description: Unexpected error
    #       schema:
    #         $ref: '#/definitions/Error'

  /:username/profile/holidays:
    post:
      summary: Stage 1 of Profile Creation
      description: Must provide information related to user's birthday, special days and holidays
      parameters:
        - name: pet
          in: body
          description: The pet JSON you want to post
          schema:
            $ref: '#/definitions/Holidays'
          required: true
      tags:
        - Holidays
      responses:
        200:
          description: And array of user objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Sessions'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /favorites:
    get:
      summary: Get'cher favorites here
      description: Users can see their list of favorites in the database
      parameters:
        - name: user_token
          in: query
          description: token for validation
          required: true
          type: string
          format: double
      tags:
        - Favorites
      responses:
        200:
          description: An array of user objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Favorites'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Save your favorites
      description: Users can store addresses by name in the database--speeding up the performance by cutting down API calls.
      parameters:
        - name: name
          in: query
          description: name of favorite location
          required: true
          type: string
          format: double
        - name: address
          in: query
          description: address of favorite location
          required: true
          type: string
          format: double
        - name: token
          in: query
          description: token for validation
          required: true
          type: string
          format: double
      tags:
        - Favorites
      responses:
        200:
          description: Save successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Favorites'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    patch:
      summary: Update your favorites
      description: Users can update a list of favorites.
      parameters:
        - name: id
          in: query
          description: user id
          required: true
          type: string
          format: double
        - name: name
          in: query
          description: name of favorite location
          required: true
          type: string
          format: double
        - name: address
          in: query
          description: address of favorite location
          required: true
          type: string
          format: double
        - name: token
          in: query
          description: token for validation
          required: true
          type: string
          format: double
      tags:
        - Favorites
      responses:
        200:
          description: Favorite successfully updated
          schema:
            type: array
            items:
              $ref: '#/definitions/Favorites'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete a favorite
      description: Don't like to go to the ballpark anymore? No problem.
      parameters:
        - name: id
          in: query
          description: user id
          required: true
          type: string
          format: double
        - name: token
          in: query
          description: token for validation
          required: true
          type: string
          format: double
      tags:
        - Favorites
      responses:
        200:
          description: Favorite successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/Favorites'
        400:
          description: Bad Request
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            type: integer
            items:
              $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:

  Fares:
    type: object
    properties:
      origin:
        type: string
        description: The user-inputted starting address that will be fed through the four APIs
      destination:
        type: string
        description: The user-inputted ending address that will be fed through the four APIs

  UsersGet:
    type: object
    properties:
      username:
        type: string
        description: Users's unique username
      first_name:
        type: string
        description: User's first name
      last_name:
        type: string
        description: User's last name

  UsersPatch:
    type: object
    properties:
      email_address:
        type: string
        description: Users's unique email address
      password:
        type: string
        description: Encrypted password
      token:
        type: string
        description: Token created by FareFairy to validate users

  Holidays:
    type: object
    properties:
      email_address:
        type: object
        properties:
          something:
            type: string
            description: Users's unique email address
      password:
        type: string
        description: Encrypted password
      token:
        type: string
        description: Token created by FareFairy to validate users

  Wishlists:
    type: object
    properties:
      email_address:
        type: string
        description: Users's unique email address
      password:
        type: string
        description: Encrypted password
      token:
        type: string
        description: Token created by FareFairy to validate users

  Favorites:
    type: object
    properties:
      token:
        type: string
        description: Token created by FareFairy to validate users
      name:
        type: string
        description: Name of favorite location
      address:
        type: string
        description: Address of favorite location
      id:
        type: string
        description: User ID

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
